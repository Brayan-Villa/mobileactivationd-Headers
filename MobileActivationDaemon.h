/*
                       * This header is generated by classdump-dyld 1.5
                       * on Tuesday, June 8, 2021 at 2:39:10 PM Central Daylight Time
                       * Operating System: Version 14.7 (Build 18G5023c)
                       * Image Source: /usr/libexec/mobileactivationd
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <mobileactivationd/mobileactivationd-Structs.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <mobileactivationd/MobileActivationProtocol.h>

@protocol OS_dispatch_queue;
@class NSString, NSData, DataArk, NSObject;

@interface MobileActivationDaemon : NSObject <NSXPCListenerDelegate, MobileActivationProtocol> {

	NSString* _hostActivationNonce;
	NSString* _deviceActivationNonce;
	PSCSessionInternal_Ref _session;
	NSData* _sessionHelloMessage;
	DataArk* _dark;
	NSObject*<OS_dispatch_queue> _sessionQueue;
	NSObject*<OS_dispatch_queue> _xpcQueue;
	NSObject*<OS_dispatch_queue> _creationQueue;
	NSString* _recertNonce;

}

@property (nonatomic,retain) DataArk * dark;                                            //@synthesize dark=_dark - In the implementation block
@property (nonatomic,readonly) PSCSessionInternal_Ref session;                          //@synthesize session=_session - In the implementation block
@property (nonatomic,readonly) NSData * sessionHelloMessage;                            //@synthesize sessionHelloMessage=_sessionHelloMessage - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> sessionQueue;               //@synthesize sessionQueue=_sessionQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> xpcQueue;                   //@synthesize xpcQueue=_xpcQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> creationQueue;              //@synthesize creationQueue=_creationQueue - In the implementation block
@property (nonatomic,retain) NSString * activationNonce; 
@property (nonatomic,retain) NSString * recertNonce;                                    //@synthesize recertNonce=_recertNonce - In the implementation block
@property (nonatomic,readonly) BOOL isHostConnection; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithContext:(id)arg1 Queue:(id)arg2 ;
-(void)dealloc;
-(void)generateSession;
-(PSCSessionInternal_Ref)session;
-(NSData *)sessionHelloMessage;
-(id)callingProcessName;
-(void)setActivationNonce:(NSString *)arg1 ;
-(NSString *)activationNonce;
-(BOOL)isHostConnection;
-(BOOL)isEntitled:(id)arg1 ;
-(id)valueForEntitlement:(id)arg1 ;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)_issueDCRT:(id)arg1 options:(id)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
-(void)_issueClientCertificateWithReferenceKey:(id)arg1 rkData:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)handleSessionResponse:(id)arg1 withError:(id*)arg2 ;
-(BOOL)validateActivationDataSignature:(id)arg1 activationSignature:(id)arg2 withError:(id*)arg3 ;
-(void)getActivationStateWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)copyRTCResetCountWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)copyMonotonicClockWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)deactivateDeviceWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)createTunnel1ActivationInfo:(id)arg1 options:(id)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
-(void)createTunnel1SessionInfoWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)createActivationInfoWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)handleActivationInfo:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)copyUCRTWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)copyPCRTTokenWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)isDeviceBrickedWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)getActivationBuildWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)requestDeviceReactivationWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)copyActivationRecordWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)unbrickDeviceWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)recertifyDeviceWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)handleActivationInfoWithSession:(id)arg1 activationSignature:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)issueClientCertificateLegacy:(id)arg1 WithCompletionBlock:(/*^block*/id)arg2 ;
-(void)issueClientCertificateWithReferenceKey:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)isInFieldCollectedWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)updateBasebandTicket:(id)arg1 baaCertData:(id)arg2 baaIntermediateCert:(id)arg3 options:(id)arg4 withCompletionBlock:(/*^block*/id)arg5 ;
-(void)copyDCRTWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)getDCRTStateWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)issueDCRT:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(DataArk *)dark;
-(void)setDark:(DataArk *)arg1 ;
-(NSObject*<OS_dispatch_queue>)sessionQueue;
-(NSObject*<OS_dispatch_queue>)xpcQueue;
-(NSObject*<OS_dispatch_queue>)creationQueue;
-(NSString *)recertNonce;
-(void)setRecertNonce:(NSString *)arg1 ;
@end

